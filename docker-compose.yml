version: "3"

services:
  centrifugo:
    image: centrifugo/centrifugo
    environment:
      - CENTRIFUGO_ADMIN=true
      - CENTRIFUGO_ADMIN_PASSWORD=password
      - CENTRIFUGO_ADMIN_SECRET=secret
      - CENTRIFUGO_ALLOWED_ORIGINS=*
      - CENTRIFUGO_ANONYMOUS=true
      - CENTRIFUGO_API_KEY=wsapikey
      - CENTRIFUGO_CLIENT_ANONYMOUS=true
      - CENTRIFUGO_PORT=8080
      - CENTRIFUGO_TOKEN_HMAC_SECRET_KEY=secret
      - CENTRIFUGO_USER_SUBSCRIBE_TO_PERSONAL=true
    ports:
      - "8080:8080"

  django:
    build:
      context: app-backend
    command:
      - /bin/bash
      - -c
      - |
        while ! pg_isready -q -h postgres -U earth2; do sleep 1; done &&
        python manage.py makemigrations --merge --noinput &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./env/backend-common
      - ./env/django
      - ./env/holo
    environment:
      - POSTGRES_RM_HOST=host.docker.internal
      - POSTGRES_RM_PORT=54322
    depends_on:
      - centrifugo
      - elasticmq
      - postgres
      - redis
    volumes:
      - ./app-backend/bazaar:/srv/bazaar
      - ./app-backend/bidding:/srv/bidding
      - ./app-backend/e2_platform:/srv/e2_platform
      - ./app-backend/e2utils:/srv/e2utils
      - ./app-backend/earth2:/srv/earth2
      - ./app-backend/epl:/srv/epl
      - ./app-backend/ether:/srv/ether
      - ./app-backend/generated:/srv/generated
      - ./app-backend/gifting:/srv/gifting
      - ./app-backend/payments:/srv/payments
      - ./app-backend/production:/srv/production
      - ./app-backend/reports:/srv/reports
      - ./app-backend/user_accounts:/srv/user_accounts


  django-worker:
    build:
      context: app-backend
    command:
      - /bin/bash
      - -c
      - |
        while ! pg_isready -q -h postgres -U earth2; do sleep 1; done &&
        exec celery worker --app=tasks
    env_file:
      - ./env/backend-common
      - ./env/django
      - ./env/holo
    depends_on:
      - centrifugo
      - elasticmq
      - postgres
      - redis
    profiles:
      - django-worker
    volumes:
      - ./app-backend/bazaar:/srv/bazaar
      - ./app-backend/bidding:/srv/bidding
      - ./app-backend/e2_platform:/srv/e2_platform
      - ./app-backend/e2utils:/srv/e2utils
      - ./app-backend/earth2:/srv/earth2
      - ./app-backend/epl:/srv/epl
      - ./app-backend/ether:/srv/ether
      - ./app-backend/generated:/srv/generated
      - ./app-backend/gifting:/srv/gifting
      - ./app-backend/payments:/srv/payments
      - ./app-backend/production:/srv/production
      - ./app-backend/reports:/srv/reports
      - ./app-backend/user_accounts:/srv/user_accounts

  elasticmq:
    image: softwaremill/elasticmq-native
    volumes:
      - elasticmq-data:/data
      - ./elasticmq.conf:/opt/elasticmq.conf
    ports:
      - "9324:9324"

  frontend:
    build:
      context: ./app-frontend
    command: ["yarn", "start"]
    env_file:
      - ./env/holo
    environment:
      - REACT_APP_HOLO_MODELS_URL=http://localhost:8003/holobuildings
    volumes:
      - node_modules:/srv/node_modules
      - ./app-frontend/public:/srv/public
      - ./app-frontend/src:/srv/src
      - ./app-frontend/package.json:/srv/package.json
      - ./app-frontend/yarn.lock:/srv/yarn.lock

  holo-backend:
    build:
      context: holo-backend
    command: yarn aws-lambda-ric src/app.handler
    entrypoint: /aws-lambda/aws-lambda-rie
    env_file:
      - ./holo-backend/.env
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_BUCKET_NAME=holobuildings
      - AWS_ENDPOINT=http://minio:9000
      - AWS_FORCE_PATH_STYLE=true
      - AWS_REGION=fake
      - AWS_SECRET_ACCESS_KEY=minio123
    ports:
      - "9080:8080"
    volumes:
      - holo_node_modules:/srv/node_modules
      - ${HOME}/.aws-lambda-rie:/aws-lambda
      - ./holo-backend/bin:/srv/bin
      - ./holo-backend/src:/srv/src
      - ./holo-backend/tests:/srv/tests
      - ./holo-backend/package.json:/srv/package.json
      - ./holo-backend/yarn.lock:/srv/yarn.lock

  minio:
    entrypoint: minio server --quiet /data
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    image: minio/minio:latest
    ports:
      - "9000:9000"
    volumes:
      - minio-data:/data

  minio-client:
    entrypoint:
      - /bin/bash
      - -c
      - |
        mc mb -p local/holobuildings
        mc policy set download local/holobuildings
    depends_on:
      - minio
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    image: minio/mc:latest
    volumes:
      - ./minio-client-config.json:/root/.mc/config.json

  nginx:
    image: nginx
    depends_on:
      - centrifugo
      - django
      - rails
    environment:
      - FRONTEND_HOST=frontend
    ports:
      - "8000:80"
      - "8001:81"
      - "8002:82"
      - "8003:83"
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/default.conf.template

  postgres:
    image: postgis/postgis:12-master
    environment:
      - POSTGRES_PASSWORD=earth2
      - POSTGRES_USER=earth2
    ports:
      - "54321:5432"
    volumes:
      - postgres-data:/var/lib/postgresql

  rails:
    build:
      context: app-backend-rails
    command:
      - /bin/bash
      - -c
      - |
        while ! pg_isready -q -h postgres -U earth2; do sleep 1; done &&
        ./bin/rails db:migrate &&
        ./bin/rails after_party:run || true &&
        rm -f tmp/pids/server.pid &&
        ./bin/rails server -b 0.0.0.0 -p 4000
    env_file:
      - ./env/backend-common
      - ./env/rails
    depends_on:
      - centrifugo
      - elasticmq
      - postgres
      - redis
    volumes:
      - ./app-backend-rails/Gemfile.lock:/srv/Gemfile.lock
      - ./app-backend-rails/Gemfile:/srv/Gemfile
      - ./app-backend-rails/app:/srv/app
      - ./app-backend-rails/config:/srv/config
      - ./app-backend-rails/db:/srv/db
      - ./app-backend-rails/spec:/srv/spec
    tty: true
    stdin_open: true

  rails-worker:
    build:
      context: app-backend-rails
    command:
      - /bin/bash
      - -c
      - |
        while ! pg_isready -q -h postgres -U earth2; do sleep 1; done &&
        bundle exec shoryuken sqs create default --endpoint=http://elasticmq:9324
        bundle exec shoryuken -R -C config/shoryuken.yml
    env_file:
      - ./env/backend-common
      - ./env/rails
    depends_on:
      - centrifugo
      - elasticmq
      - postgres
      - redis
    profiles:
      - rails-worker
    volumes:
      - ./app-backend-rails/Gemfile.lock:/srv/Gemfile.lock
      - ./app-backend-rails/Gemfile:/srv/Gemfile
      - ./app-backend-rails/app:/srv/app
      - ./app-backend-rails/config:/srv/config
      - ./app-backend-rails/db:/srv/db


  redis:
    image: redis:latest
    volumes:
      - redis-data:/data

volumes:
  elasticmq-data:
  holo_node_modules:
  minio-data:
  node_modules:
  postgres-data:
  redis-data:
